https://lms-zwhm.onrender.com/api/v1/auth/


{firstName: "Kizzy", 
            lastName:"Landers", 
            email:'sdrolo@gmail.com',
            learningTrack: "Frontend",
            userName: 'kixic',
            password: '123456'
}

vic.jsx
123456

1. cathy
12345678Aa$

2. leddy
12345678Aa$

3. brianny
12345678Aa$

4. germany
12345678Aa$

5. glovy
12345678Aa$

6. orally
12345678Aa$


7. CHIKE
12345Abec@




ETH addresses
0xBBAC6AABCFEBACEBCEABCEACB76767867676ACCC
0xeA0B9657892321121287128712BC78A89F989AAA

Available user Keys
1. 647281eccab8198e91c2398d
2. 6472787a61a1ede2b753a21a
3. 6472790861a1ede2b753a21e
4. 64727bff5dde9d6728c61da0
5. 64727c8834b339a2d287e463
6. 64727cd334b339a2d287e466
7. 64727ce034b339a2d287e469
8. 64727cea34b339a2d287e46c

64832a13bb7c38d6964f1aa2

install jwtDecode
import jwt_decode from "jwt-decode";
 
var token = "eyJ0eXAiO.../// jwt token";
var decoded = jwt_decode(token);
 
console.log(decoded);
 
/* prints:
 * { foo: "bar",
 *   exp: 1393286893,
 *   iat: 1393268893  }
 */



 import { useLocation, Navigate, Outlet } from "react-router-dom";
import AuthContext from '../context/AuthProvider';
import { useContext } from 'react';


function privateRoutes({role}) {
  const { auth } = useContext(AuthContext);
  const { location } = useLocation();

  return (
        auth?.roles?.find(role => allowedRoles?.includes(role))
            ? <Outlet />
            : auth?.user
                ? <Navigate to="/unauthorized" state={{ from: location }} replace />
                : <Navigate to="/login" state={{ from: location }} replace />
    );
  
}




export default privateRoutes



import { Outlet } from 'react-router-dom';


function PublicRoutes() {
  return (
    <div>
      <Outlet />
    </div>
  )
}

export default PublicRoutes



